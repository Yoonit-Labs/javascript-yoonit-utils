(()=>{"use strict";var e={d:(r,t)=>{for(var n in t)e.o(t,n)&&!e.o(r,n)&&Object.defineProperty(r,n,{enumerable:!0,get:t[n]})},o:(e,r)=>Object.prototype.hasOwnProperty.call(e,r),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},r={};e.r(r),e.d(r,{graphql:()=>s});const t=(e,r)=>t=>{const o=c(t);return(...t)=>{if(!t.length)return console.warn("You need to specify at least one response field"),!1;const c=n(t);return`${e} {\n        ${r} (\n          ${o}\n        ){\n          ${c}\n          }\n        }`}},n=e=>e.reduce(((...e)=>o(...e))),o=(e,r)=>{if("string"==typeof r)return`${e}, ${r}`;if(r.constructor===Object){const t=Object.keys(r),n=r[t[0]];if(Array.isArray(n)){const r=n.reduce(((...e)=>o(...e)));return`${e}, ${t[0]} { ${r} }`}return`${e}, ${t[0]} { ${n} }`}return console.warn("One of your requested fields is in a wrong format"),e},c=e=>e&&e.constructor===Object?Object.keys(e).reduce(((r,t)=>null===e[t]?r:Array.isArray(e[t])||e[t].constructor===Object||"boolean"==typeof e[t]?r+=`${t}: ${(e=>{let r=JSON.stringify(e);return r=r.replace(/"([A-z])\w+"(:| :)/g,(e=>e.replace(/"/g,""))),r})(e[t])},`:r+=`${t}: "${e[t]}",`),""):"",s={query:e=>e?t.call(void 0,"query",e):(console.warn("You need to specify an endpoint"),()=>()=>!1),mutation:e=>e?t.call(void 0,"mutation",e):(console.warn("You need to specify an endpoint"),()=>()=>!1)};module.exports=r})();